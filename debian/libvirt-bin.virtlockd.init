#!/bin/sh

# the following is the LSB init header see
# http://refspecs.linuxfoundation.org/LSB_5.0.0/LSB-Core-generic/LSB-Core-generic/initscrcomconv.html
#
### BEGIN INIT INFO
# Provides: virtlockd
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Required-Start: $local_fs $remote_fs $syslog
# Required-Stop: $local_fs $remote_fs $syslog
# Should-Start:
# Should-Stop:
# Short-Description: virtual machine lock manager
# Description: This is a daemon for managing locks
#              on virtual machine disk images
### END INIT INFO

# the following is chkconfig init header
#
# virtlockd:   virtual machine lock manager
#
# chkconfig: 345 96 04
# description:  This is a daemon for managing locks \
#               on virtual machine disk images
#
# processname: virtlockd
# pidfile: /var/run/virtlockd.pid
#

# Source function library.
. /lib/lsb/init-functions

SERVICE=virtlockd
PROCESS=virtlockd
PIDFILE=/var/run/$SERVICE.pid

VIRTLOCKD_ARGS=

test -f /etc/default/virtlockd && . /etc/default/virtlockd

RETVAL=0

start() {
    echo -n "Starting $SERVICE daemon: "
    daemon --pidfile $PIDFILE --check $SERVICE $PROCESS --daemon $VIRTLOCKD_ARGS
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$SERVICE
}

stop() {
    echo -n "Stopping $SERVICE daemon: "

    killproc -p $PIDFILE $PROCESS
    RETVAL=$?
    echo
    if [ $RETVAL -eq 0 ]; then
        rm -f /var/lock/subsys/$SERVICE
        rm -f $PIDFILE
    fi
}

restart() {
    stop
    start
}

reload() {
    echo -n "Reloading $SERVICE configuration: "

    killproc -p $PIDFILE $PROCESS -USR1
    RETVAL=$?
    echo
    return $RETVAL
}

# See how we were called.
case "$1" in
    start|stop|restart|reload)
        $1
        ;;
    status)
        status -p $PIDFILE $PROCESS
        RETVAL=$?
        ;;
    force-reload)
        reload
        ;;
    condrestart|try-restart)
        [ -f /var/lock/subsys/$SERVICE ] && restart || :
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|condrestart|reload|force-reload|try-restart}"
        exit 2
        ;;
esac
exit $RETVAL
