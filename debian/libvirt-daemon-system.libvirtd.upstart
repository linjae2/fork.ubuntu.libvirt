description "libvirt daemon"
author "Dustin Kirkland <kirkland@canonical.com>"

start on stopped rc RUNLEVEL=[2345]
stop on starting rc RUNLEVEL=[016]

expect daemon
respawn

# daemonize
env libvirtd_opts="-d"
# whether libvirtd should run at boot/shutdown
env start_libvirtd="yes"
# by default wait 30 seconds for vms to shut down
env libvirtd_shutdown_timeout=30
# uris for which to shut down vms
env libvirt_uris='qemu:///system lxc:/// xen:///'

pre-start script
	[ -r /etc/default/libvirtd ] && . /etc/default/libvirtd
	[ ! "x$start_libvirtd" = "xyes" ] && { stop; exit 0; }
	mkdir -p /var/run/libvirt
	# Clean up a pidfile that might be left around
	rm -f /var/run/libvirtd.pid
end script

post-start script
	sockfile=/var/run/libvirt/libvirt-sock
	while [ ! -S $sockfile ] ; do
		initctl status libvirtd | grep -qE "(stop|respawn)/" && exit 1
		echo "waiting for $sockfile"
		sleep 0.5
	done
	echo "$sockfile ready."
end script

pre-stop script
	if [ -z "$RUNLEVEL" ]; then
		exit 0
	fi

	if [ "$RUNLEVEL" -ne 0 ] && [ "$RUNLEVEL" -ne 1 ] && [ "$RUNLEVEL" -ne 6 ]; then
		exit 0
	fi

        /usr/lib/libvirt/libvirt-stop-guests
end script

script
	[ -r /etc/default/libvirtd ] && . /etc/default/libvirtd
	exec /usr/sbin/libvirtd $libvirtd_opts
end script
