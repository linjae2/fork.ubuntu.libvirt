libvirt (1.3.1-1ubuntu10.7) unstable; urgency=medium

  libvirt-daemon-system now uses the allocated uid and gid 64055
  for the libvirt-qemu user and group on new installations, when
  the uid/gid is available (Xenial: debconf warning isn't shown).

  On existing installations, which have different uid/gid values
  assigned, the recommended procedure is to reassign the uid/gid
  (might require considerations for ownership/permission changes).
  No debconf warning is shown in this case; only this NEWS entry.

  This change is in order to prevent I/O errors during migration
  of guests with disk image files shared over NFS, caused by the
  different uid/gid ownership between the source and destination
  host systems, which leads to access/permission errors with NFS.

  If guest migration over NFS is not a requirement in the system,
  there should not be any impact to the guests for not using the
  allocated uid/gid.

 -- Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>  Thu, 18 Nov 2016 13:56:38 -0200

libvirt (1.2.9~rc1-1) experimental; urgency=medium

  libvirtd now uses PolicyKit instead of unix socket domain permissions for r/w
  connections. This has the advantage of requiring less reconfiguration when
  using ACL based access and bringing us closer to upstream's recommendations.
  In order to keep old configurations working we're still allowing all members
  of the libvirt group full access via /etc/polkit-1/rules.d/60-libvirt.rules.

  If you want to continue to use socket permission based access control you can
  still configure it in /etc/libvirt/libvirtd.conf.

 -- Guido Günther <agx@sigxcpu.org>  Sat, 27 Sep 2014 19:22:46 +0200

libvirt (1.1.4-2) unstable; urgency=low

  If you're using cgroups make sure you're using a different mount per cgroup
  controller (cpu, memory, ...) that is mounted to /sys/fs/cgroup/<controller>.
  This can be achieved using mount_cgroups in /etc/default/libvirt-bin or by
  using systemd. Using a single mount point /sys/fs/cgroup for all controllers
  will no longer work and will prevent vms from starting. See

  http://libvirt.org/cgroups.html

  for more information. If you're not using cgroups nothing has to be changed.

 -- Guido Günther <agx@sigxcpu.org>  Sun, 01 Dec 2013 19:33:56 +0100

libvirt (1.0.2-3) experimental; urgency=low

  For qemu:///system KVM/QEMU processes now run as group libvirt-qemu. This
  makes sure image files and volumes aren't accessible by users in the more
  general and previously used kvm group. To change this behaviour adjust the
  group option in /etc/libvirt/qemu.conf.

 -- Guido Günther <agx@sigxcpu.org>  Tue, 26 Feb 2013 06:30:48 +0100

libvirt (0.8.3-2) unstable; urgency=low

  Disk format probing is disabled now by default for security reasons
  (CVE-2010-2237). You need to explicitly add a driver type element to your
  disk devices in the domain XML:

      <disk ...>
         <driver name='qemu' type='qcow2'/>
         ...
      </disk>

  Alternatively you can re-enable probing by setting
  allow_disk_format_probing=1 in /etc/libvirt/qemu.conf but this is insecure.

 -- Guido Günther <agx@sigxcpu.org>  Wed, 29 Sep 2010 13:10:02 +0200

libvirt (0.8.1-2) unstable; urgency=low

  If you're using a script such as /etc/qemu-ifup to set up QEMU network
  interfaces, have a look at README.Debian about the new config option
  clear_emulator_capabilities in /etc/libvirt/qemu.conf.
  When using NAT via libvirt's default network you don't have to change
  anything.

 -- Guido Günther <agx@sigxcpu.org>  Mon, 12 Jul 2010 19:58:35 +0200
