Description: fix denial of service via bitmap string out of bounds
Origin: backport, http://libvirt.org/git/?p=libvirt.git;a=commit;h=47b9127e883677a0d60d767030a147450e919a25
Origin: backport, http://libvirt.org/git/?p=libvirt.git;a=commit;h=106a2ddaa7b5ef7d69242333e48d77fda0b7ccf3
Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=997367

Index: libvirt-1.0.2/po/POTFILES.in
===================================================================
--- libvirt-1.0.2.orig/po/POTFILES.in	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/po/POTFILES.in	2013-09-13 13:25:58.796548529 -0400
@@ -141,6 +141,7 @@
 src/util/viraudit.c
 src/util/virauth.c
 src/util/virauthconfig.c
+src/util/virbitmap.c
 src/util/vircgroup.c
 src/util/vircommand.c
 src/util/virconf.c
Index: libvirt-1.0.2/src/conf/domain_conf.c
===================================================================
--- libvirt-1.0.2.orig/src/conf/domain_conf.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/conf/domain_conf.c	2013-09-13 13:25:58.800548529 -0400
@@ -9150,11 +9150,8 @@
         tmp = virXPathString("string(./vcpu[1]/@cpuset)", ctxt);
         if (tmp) {
             if (virBitmapParse(tmp, 0, &def->cpumask,
-                               VIR_DOMAIN_CPUMASK_LEN) < 0) {
-                virReportError(VIR_ERR_XML_ERROR,
-                               "%s", _("topology cpuset syntax error"));
+                               VIR_DOMAIN_CPUMASK_LEN) < 0)
                 goto error;
-            }
             VIR_FREE(tmp);
         }
     }
Index: libvirt-1.0.2/src/conf/network_conf.c
===================================================================
--- libvirt-1.0.2.orig/src/conf/network_conf.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/conf/network_conf.c	2013-09-13 13:25:58.800548529 -0400
@@ -1858,9 +1858,6 @@
         if (class_id &&
             virBitmapParse(class_id, 0,
                            &net->class_id, CLASS_ID_BITMAP_SIZE) < 0) {
-            virReportError(VIR_ERR_INTERNAL_ERROR,
-                           _("Malformed 'class_id' attribute: %s"),
-                           class_id);
             VIR_FREE(class_id);
             goto cleanup;
         }
Index: libvirt-1.0.2/src/nodeinfo.c
===================================================================
--- libvirt-1.0.2.orig/src/nodeinfo.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/nodeinfo.c	2013-09-13 13:25:58.804548529 -0400
@@ -1488,11 +1488,8 @@
     if (virFileReadAll(path, SYSFS_THREAD_SIBLINGS_LIST_LENGTH_MAX, &buf) < 0)
         goto cleanup;
 
-    if (virBitmapParse(buf, 0, &ret, NUMA_MAX_N_CPUS) < 0) {
-        virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
-                       _("Failed to parse thread siblings"));
+    if (virBitmapParse(buf, 0, &ret, NUMA_MAX_N_CPUS) < 0)
         goto cleanup;
-    }
 
 cleanup:
     VIR_FREE(buf);
Index: libvirt-1.0.2/src/qemu/qemu_driver.c
===================================================================
--- libvirt-1.0.2.orig/src/qemu/qemu_driver.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/qemu/qemu_driver.c	2013-09-13 13:25:58.808548529 -0400
@@ -7643,8 +7643,6 @@
             if (virBitmapParse(params[i].value.s,
                                0, &nodeset,
                                VIR_DOMAIN_CPUMASK_LEN) < 0) {
-                virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
-                               _("Failed to parse nodeset"));
                 ret = -1;
                 continue;
             }
Index: libvirt-1.0.2/src/util/virbitmap.c
===================================================================
--- libvirt-1.0.2.orig/src/util/virbitmap.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/util/virbitmap.c	2013-09-13 13:26:41.936546602 -0400
@@ -36,7 +36,9 @@
 #include "virutil.h"
 #include "c-ctype.h"
 #include "count-one-bits.h"
+#include "virerror.h"
 
+#define VIR_FROM_THIS VIR_FROM_NONE
 
 struct _virBitmap {
     size_t max_bit;
@@ -290,24 +292,21 @@
                virBitmapPtr *bitmap,
                size_t bitmapSize)
 {
-    int ret = 0;
     bool neg = false;
-    const char *cur;
+    const char *cur = str;
     char *tmp;
     int i, start, last;
 
-    if (!str)
+    if (!(*bitmap = virBitmapNew(bitmapSize)))
         return -1;
 
-    cur = str;
-    virSkipSpaces(&cur);
+    if (!str)
+        goto error;
 
-    if (*cur == 0)
-        return -1;
+    virSkipSpaces(&cur);
 
-    *bitmap = virBitmapNew(bitmapSize);
-    if (!*bitmap)
-        return -1;
+    if (*cur == '\0')
+        goto error;
 
     while (*cur != 0 && *cur != terminator) {
         /*
@@ -322,12 +321,12 @@
         }
 
         if (!c_isdigit(*cur))
-            goto parse_error;
+            goto error;
 
         if (virStrToLong_i(cur, &tmp, 10, &start) < 0)
-            goto parse_error;
+            goto error;
         if (start < 0)
-            goto parse_error;
+            goto error;
 
         cur = tmp;
 
@@ -335,35 +334,29 @@
 
         if (*cur == ',' || *cur == 0 || *cur == terminator) {
             if (neg) {
-                if (virBitmapIsSet(*bitmap, start)) {
-                    ignore_value(virBitmapClearBit(*bitmap, start));
-                    ret--;
-                }
+                if (virBitmapClearBit(*bitmap, start) < 0)
+                    goto error;
             } else {
-                if (!virBitmapIsSet(*bitmap, start)) {
-                    ignore_value(virBitmapSetBit(*bitmap, start));
-                    ret++;
-                }
+                if (virBitmapSetBit(*bitmap, start) < 0)
+                    goto error;
             }
         } else if (*cur == '-') {
             if (neg)
-                goto parse_error;
+                goto error;
 
             cur++;
             virSkipSpaces(&cur);
 
             if (virStrToLong_i(cur, &tmp, 10, &last) < 0)
-                goto parse_error;
+                goto error;
             if (last < start)
-                goto parse_error;
+                goto error;
 
             cur = tmp;
 
             for (i = start; i <= last; i++) {
-                if (!virBitmapIsSet(*bitmap, i)) {
-                    ignore_value(virBitmapSetBit(*bitmap, i));
-                    ret++;
-                }
+                if (virBitmapSetBit(*bitmap, i) < 0)
+                    goto error;
             }
 
             virSkipSpaces(&cur);
@@ -376,14 +369,15 @@
         } else if (*cur == 0 || *cur == terminator) {
             break;
         } else {
-            goto parse_error;
+            goto error;
         }
     }
 
-    sa_assert(ret >= 0);
-    return ret;
+    return virBitmapCountBits(*bitmap);
 
-parse_error:
+error:
+    virReportError(VIR_ERR_INVALID_ARG,
+                   _("Failed to parse bitmap '%s'"), str);
     virBitmapFree(*bitmap);
     *bitmap = NULL;
     return -1;
Index: libvirt-1.0.2/src/xenxs/xen_sxpr.c
===================================================================
--- libvirt-1.0.2.orig/src/xenxs/xen_sxpr.c	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/src/xenxs/xen_sxpr.c	2013-09-13 13:25:58.808548529 -0400
@@ -1205,11 +1205,8 @@
 
     if (cpus != NULL) {
         if (virBitmapParse(cpus, 0, &def->cpumask,
-                           VIR_DOMAIN_CPUMASK_LEN) < 0) {
-            virReportError(VIR_ERR_INTERNAL_ERROR,
-                           _("invalid CPU mask %s"), cpus);
+                           VIR_DOMAIN_CPUMASK_LEN) < 0)
             goto error;
-        }
     }
 
     def->maxvcpus = sexpr_int(root, "domain/vcpus");
Index: libvirt-1.0.2/tests/cpuset
===================================================================
--- libvirt-1.0.2.orig/tests/cpuset	2013-09-13 13:25:58.816548529 -0400
+++ libvirt-1.0.2/tests/cpuset	2013-09-13 13:25:58.808548529 -0400
@@ -42,7 +42,7 @@
 $abs_top_builddir/tools/virsh --connect test:///default define xml-invalid > out 2>&1 && fail=1
 cat <<\EOF > exp || fail=1
 error: Failed to define domain from xml-invalid
-error: XML error: topology cpuset syntax error
+error: invalid argument: Failed to parse bitmap 'aaa'
 
 EOF
 compare exp out || fail=1
