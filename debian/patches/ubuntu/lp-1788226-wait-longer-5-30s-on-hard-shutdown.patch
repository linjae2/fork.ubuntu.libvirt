From 9a4e4b942df0474503e7524ea427351a46c0eabe Mon Sep 17 00:00:00 2001
From: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Date: Mon, 6 Aug 2018 12:10:38 +0200
Subject: [PATCH 2/2] process: wait longer 5->30s on hard shutdown
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In cases where virProcessKillPainfully already reailizes that
SIGTERM wasn't enough we are partially on a bad path already.
Maybe the system is overloaded or having serious trouble to free and
reap resources in time.

In those case give the SIGKILL that was sent after 10 seconds some more
time to take effect if force was set (only then we are falling back to
SIGKILL anyway).

Signed-off-by: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Reviewed-by: Daniel P. Berrang√© <berrange@redhat.com>

Origin: backport, https://libvirt.org/git/?p=libvirt.git;a=commit;h=9a4e4b942df0474503e7524ea427351a46c0eabe
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1788226
Last-Update: 2018-08-21
---
 src/util/virprocess.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/util/virprocess.c b/src/util/virprocess.c
index 4c7f2ed97c..3988f5546c 100644
--- a/src/util/virprocess.c
+++ b/src/util/virprocess.c
@@ -351,7 +351,7 @@ virProcessKillPainfullyDelay(pid_t pid, bool force, unsigned int extradelay)
     size_t i;
     int ret = -1;
     /* This is in 1/5th seconds since polling is on a 0.2s interval */
-    unsigned int polldelay = 75 + (extradelay*5);
+    unsigned int polldelay = (force ? 200 : 75) + (extradelay*5);
     const char *signame = "TERM";
 
     VIR_DEBUG("vpid=%lld force=%d extradelay=%u",
@@ -360,7 +360,7 @@ virProcessKillPainfullyDelay(pid_t pid, bool force, unsigned int extradelay)
     /* This loop sends SIGTERM, then waits a few iterations (10 seconds)
      * to see if it dies. If the process still hasn't exited, and
      * @force is requested, a SIGKILL will be sent, and this will
-     * wait up to 5 seconds more for the process to exit before
+     * wait up to 30 seconds more for the process to exit before
      * returning.
      *
      * An extra delay can be passed by the caller for cases that are
-- 
2.17.1

