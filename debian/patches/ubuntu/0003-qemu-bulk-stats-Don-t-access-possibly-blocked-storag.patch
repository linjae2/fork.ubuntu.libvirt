From 4cd3b0887ad41f7b4e55b522d87811a34468562b Mon Sep 17 00:00:00 2001
From: Peter Krempa <pkrempa@redhat.com>
Date: Wed, 18 May 2016 14:58:25 +0200
Subject: [PATCH 3/3] qemu: bulk stats: Don't access possibly blocked storage

If the stats for a block device can't be acquired from qemu we've
fallen back to loading them from the file on the disk in libvirt.

If qemu is not cooperating due to being stuck on an inaccessible NFS
share we would then attempt to read the files and get stuck too with
the VM object locked. All other APIs would eventually get stuck waiting
on the VM lock.

Avoid this problem by skipping the block stats if the VM is online but
the monitor did not provide any stats.

Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=1337073
---
 src/qemu/qemu_driver.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

Bug: upstream, https://libvirt.org/git/?p=libvirt.git;a=commit;h=71d2c172edb997bae1e883b2e1bafa97d9f953a1
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1746630
Bug-Redhat: https://bugzilla.redhat.com/show_bug.cgi?id=1337073
Index: libvirt-1.3.1/src/qemu/qemu_driver.c
===================================================================
--- libvirt-1.3.1.orig/src/qemu/qemu_driver.c	2017-11-21 20:19:38.166772849 -0800
+++ libvirt-1.3.1/src/qemu/qemu_driver.c	2017-11-21 20:19:38.166772849 -0800
@@ -19290,13 +19290,22 @@
         QEMU_ADD_BLOCK_PARAM_UI(record, maxparams, block_idx, "backingIndex",
                                 backing_idx);
 
-    /* use fallback path if data is not available */
-    if (!stats || !alias || !(entry = virHashLookup(stats, alias))) {
+    /* the VM is offline so we have to go and load the stast from the disk by
+     * ourselves */
+    if (!virDomainObjIsActive(dom)) {
         ret = qemuDomainGetStatsOneBlockFallback(driver, cfg, dom, record,
                                                  maxparams, src, block_idx);
         goto cleanup;
     }
 
+    /* In case where qemu didn't provide the stats we stop here rather than
+     * trying to refresh the stats from the disk. Inability to provide stats is
+     * usually caused by blocked storage so this would make libvirtd hang */
+    if (!stats || !alias || !(entry = virHashLookup(stats, alias))) {
+        ret = 0;
+        goto cleanup;
+    }
+
     QEMU_ADD_BLOCK_PARAM_LL(record, maxparams, block_idx,
                             "rd.reqs", entry->rd_req);
     QEMU_ADD_BLOCK_PARAM_LL(record, maxparams, block_idx,
