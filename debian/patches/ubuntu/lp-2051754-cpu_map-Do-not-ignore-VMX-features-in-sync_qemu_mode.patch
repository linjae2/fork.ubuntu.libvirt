From: Jiri Denemark <jdenemar@redhat.com>
Date: Wed, 13 Mar 2024 17:14:12 -0400
Subject: cpu_map: Do not ignore VMX features in sync_qemu_models script

To: devel@lists.libvirt.org
Date: Tue, 12 Mar 2024 18:06:45 +0100 (1 day, 4 hours, 2 minutes ago)
Message-ID: <5c54df50449bb537a751f23628647b986f4aed04.1710262622.git.jdenemar@redhat.com>

Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
Origin: https://lists.libvirt.org/archives/list/devel@lists.libvirt.org/message/UGR57NRXFY5GLKMGZ3Y2DQI3V5UC2V7M/
Bug: https://gitlab.com/libvirt/libvirt/-/issues/568
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/2051754
---
 src/cpu_map/sync_qemu_models_i386.py | 114 ++++++++++++++++++++++++++++++++++-
 1 file changed, 111 insertions(+), 3 deletions(-)

diff --git a/src/cpu_map/sync_qemu_models_i386.py b/src/cpu_map/sync_qemu_models_i386.py
index 1c6a2d4..9e96b42 100755
--- a/src/cpu_map/sync_qemu_models_i386.py
+++ b/src/cpu_map/sync_qemu_models_i386.py
@@ -184,12 +184,120 @@ def translate_feature(name):
         "MSR_ARCH_CAP_SKIP_L1DFL_VMENTRY": "skip-l1dfl-vmentry",
         "MSR_ARCH_CAP_TAA_NO": "taa-no",
         "MSR_CORE_CAP_SPLIT_LOCK_DETECT": "split-lock-detect",
+
+        # FEAT_VMX_PROCBASED_CTLS
+        "VMX_CPU_BASED_VIRTUAL_INTR_PENDING": "vmx-vintr-pending",
+        "VMX_CPU_BASED_USE_TSC_OFFSETING": "vmx-tsc-offset",
+        "VMX_CPU_BASED_HLT_EXITING": "vmx-hlt-exit",
+        "VMX_CPU_BASED_INVLPG_EXITING": "vmx-invlpg-exit",
+        "VMX_CPU_BASED_MWAIT_EXITING": "vmx-mwait-exit",
+        "VMX_CPU_BASED_RDPMC_EXITING": "vmx-rdpmc-exit",
+        "VMX_CPU_BASED_RDTSC_EXITING": "vmx-rdtsc-exit",
+        "VMX_CPU_BASED_CR3_LOAD_EXITING": "vmx-cr3-load-noexit",
+        "VMX_CPU_BASED_CR3_STORE_EXITING": "vmx-cr3-store-noexit",
+        "VMX_CPU_BASED_CR8_LOAD_EXITING": "vmx-cr8-load-exit",
+        "VMX_CPU_BASED_CR8_STORE_EXITING": "vmx-cr8-store-exit",
+        "VMX_CPU_BASED_TPR_SHADOW": "vmx-flexpriority",
+        "VMX_CPU_BASED_VIRTUAL_NMI_PENDING": "vmx-vnmi-pending",
+        "VMX_CPU_BASED_MOV_DR_EXITING": "vmx-movdr-exit",
+        "VMX_CPU_BASED_UNCOND_IO_EXITING": "vmx-io-exit",
+        "VMX_CPU_BASED_USE_IO_BITMAPS": "vmx-io-bitmap",
+        "VMX_CPU_BASED_MONITOR_TRAP_FLAG": "vmx-mtf",
+        "VMX_CPU_BASED_USE_MSR_BITMAPS": "vmx-msr-bitmap",
+        "VMX_CPU_BASED_MONITOR_EXITING": "vmx-monitor-exit",
+        "VMX_CPU_BASED_PAUSE_EXITING": "vmx-pause-exit",
+        "VMX_CPU_BASED_ACTIVATE_SECONDARY_CONTROLS": "vmx-secondary-ctls",
+
+        # FEAT_VMX_SECONDARY_CTLS
+        "VMX_SECONDARY_EXEC_VIRTUALIZE_APIC_ACCESSES": "vmx-apicv-xapic",
+        "VMX_SECONDARY_EXEC_ENABLE_EPT": "vmx-ept",
+        "VMX_SECONDARY_EXEC_DESC": "vmx-desc-exit",
+        "VMX_SECONDARY_EXEC_RDTSCP": "vmx-rdtscp-exit",
+        "VMX_SECONDARY_EXEC_VIRTUALIZE_X2APIC_MODE": "vmx-apicv-x2apic",
+        "VMX_SECONDARY_EXEC_ENABLE_VPID": "vmx-vpid",
+        "VMX_SECONDARY_EXEC_WBINVD_EXITING": "vmx-wbinvd-exit",
+        "VMX_SECONDARY_EXEC_UNRESTRICTED_GUEST": "vmx-unrestricted-guest",
+        "VMX_SECONDARY_EXEC_APIC_REGISTER_VIRT": "vmx-apicv-register",
+        "VMX_SECONDARY_EXEC_VIRTUAL_INTR_DELIVERY": "vmx-apicv-vid",
+        "VMX_SECONDARY_EXEC_PAUSE_LOOP_EXITING": "vmx-ple",
+        "VMX_SECONDARY_EXEC_RDRAND_EXITING": "vmx-rdrand-exit",
+        "VMX_SECONDARY_EXEC_ENABLE_INVPCID": "vmx-invpcid-exit",
+        "VMX_SECONDARY_EXEC_ENABLE_VMFUNC": "vmx-vmfunc",
+        "VMX_SECONDARY_EXEC_SHADOW_VMCS": "vmx-shadow-vmcs",
+        "VMX_SECONDARY_EXEC_ENCLS_EXITING": "vmx-encls-exit",
+        "VMX_SECONDARY_EXEC_RDSEED_EXITING": "vmx-rdseed-exit",
+        "VMX_SECONDARY_EXEC_ENABLE_PML": "vmx-pml",
+        "VMX_SECONDARY_EXEC_XSAVES": "vmx-xsaves",
+        "VMX_SECONDARY_EXEC_TSC_SCALING": "vmx-tsc-scaling",
+        "VMX_SECONDARY_EXEC_ENABLE_USER_WAIT_PAUSE": "vmx-enable-user-wait-pause",
+
+        # FEAT_VMX_PINBASED_CTLS
+        "VMX_PIN_BASED_EXT_INTR_MASK": "vmx-intr-exit",
+        "VMX_PIN_BASED_NMI_EXITING": "vmx-nmi-exit",
+        "VMX_PIN_BASED_VIRTUAL_NMIS": "vmx-vnmi",
+        "VMX_PIN_BASED_VMX_PREEMPTION_TIMER": "vmx-preemption-timer",
+        "VMX_PIN_BASED_POSTED_INTR": "vmx-posted-intr",
+
+        # FEAT_VMX_EXIT_CTLS
+        "VMX_VM_EXIT_SAVE_DEBUG_CONTROLS": "vmx-exit-nosave-debugctl",
+        "VMX_VM_EXIT_LOAD_IA32_PERF_GLOBAL_CTRL": "vmx-exit-load-perf-global-ctrl",
+        "VMX_VM_EXIT_ACK_INTR_ON_EXIT": "vmx-exit-ack-intr",
+        "VMX_VM_EXIT_SAVE_IA32_PAT": "vmx-exit-save-pat",
+        "VMX_VM_EXIT_LOAD_IA32_PAT": "vmx-exit-load-pat",
+        "VMX_VM_EXIT_SAVE_IA32_EFER": "vmx-exit-save-efer",
+        "VMX_VM_EXIT_LOAD_IA32_EFER": "vmx-exit-load-efer",
+        "VMX_VM_EXIT_SAVE_VMX_PREEMPTION_TIMER": "vmx-exit-save-preemption-timer",
+        "VMX_VM_EXIT_CLEAR_BNDCFGS": "vmx-exit-clear-bndcfgs",
+        "VMX_VM_EXIT_CLEAR_IA32_RTIT_CTL": "vmx-exit-clear-rtit-ctl",
+        "VMX_VM_EXIT_LOAD_IA32_PKRS": "vmx-exit-load-pkrs",
+
+        # FEAT_VMX_ENTRY_CTLS
+        "VMX_VM_ENTRY_LOAD_DEBUG_CONTROLS": "vmx-entry-noload-debugctl",
+        "VMX_VM_ENTRY_IA32E_MODE": "vmx-entry-ia32e-mode",
+        "VMX_VM_ENTRY_LOAD_IA32_PERF_GLOBAL_CTRL": "vmx-entry-load-perf-global-ctrl",
+        "VMX_VM_ENTRY_LOAD_IA32_PAT": "vmx-entry-load-pat",
+        "VMX_VM_ENTRY_LOAD_IA32_EFER": "vmx-entry-load-efer",
+        "VMX_VM_ENTRY_LOAD_BNDCFGS": "vmx-entry-load-bndcfgs",
+        "VMX_VM_ENTRY_LOAD_IA32_RTIT_CTL": "vmx-entry-load-rtit-ctl",
+        "VMX_VM_ENTRY_LOAD_IA32_PKRS": "vmx-entry-load-pkrs",
+
+        # FEAT_VMX_MISC
+        "MSR_VMX_MISC_STORE_LMA": "vmx-store-lma",
+        "MSR_VMX_MISC_ACTIVITY_HLT": "vmx-activity-hlt",
+        "MSR_VMX_MISC_ACTIVITY_SHUTDOWN": "vmx-activity-shutdown",
+        "MSR_VMX_MISC_ACTIVITY_WAIT_SIPI": "vmx-activity-wait-sipi",
+        "MSR_VMX_MISC_VMWRITE_VMEXIT": "vmx-vmwrite-vmexit-fields",
+        "MSR_VMX_MISC_ZERO_LEN_INJECT": "vmx-zero-len-inject",
+
+        # FEAT_VMX_EPT_VPID_CAPS
+        "MSR_VMX_EPT_EXECONLY": "vmx-ept-execonly",
+        "MSR_VMX_EPT_PAGE_WALK_LENGTH_4": "vmx-page-walk-4",
+        "MSR_VMX_EPT_PAGE_WALK_LENGTH_5": "vmx-page-walk-5",
+        "MSR_VMX_EPT_UC": "vmx-ept-uc",
+        "MSR_VMX_EPT_WB": "vmx-ept-wb",
+        "MSR_VMX_EPT_2MB": "vmx-ept-2mb",
+        "MSR_VMX_EPT_1GB": "vmx-ept-1gb",
+        "MSR_VMX_EPT_INVEPT": "vmx-invept",
+        "MSR_VMX_EPT_AD_BITS": "vmx-eptad",
+        "MSR_VMX_EPT_ADVANCED_VMEXIT_INFO": "vmx-ept-advanced-exitinfo",
+        "MSR_VMX_EPT_INVEPT_SINGLE_CONTEXT": "vmx-invept-single-context",
+        "MSR_VMX_EPT_INVEPT_ALL_CONTEXT": "vmx-invept-all-context",
+        "MSR_VMX_EPT_INVVPID": "vmx-invvpid",
+        "MSR_VMX_EPT_INVVPID_SINGLE_ADDR": "vmx-invvpid-single-addr",
+        "MSR_VMX_EPT_INVVPID_SINGLE_CONTEXT": "vmx-invvpid-single-context",
+        "MSR_VMX_EPT_INVVPID_ALL_CONTEXT": "vmx-invvpid-all-context",
+        "MSR_VMX_EPT_INVVPID_SINGLE_CONTEXT_NOGLOBALS": "vmx-invvpid-single-context-noglobals",
+
+        # FEAT_VMX_BASIC
+        "MSR_VMX_BASIC_INS_OUTS": "vmx-ins-outs",
+        "MSR_VMX_BASIC_TRUE_CTLS": "vmx-true-ctls",
+        "MSR_VMX_BASIC_ANY_ERRCODE": "vmx-any-errcode",
+
+        # FEAT_VMX_VMFUNC
+        "MSR_VMX_VMFUNC_EPT_SWITCHING": "vmx-eptp-switching",
     }
 
     ignore = any([
-        name.startswith("VMX_"),
-        name.startswith("vmx-"),
-        name.startswith("MSR_VMX_"),
         name in ("0", "model", "model-id", "stepping"),
         name in ("CPUID_EXT_MONITOR", "monitor"),
         name in ("MSR_VMX_BASIC_DUAL_MONITOR", "dual-monitor"),
