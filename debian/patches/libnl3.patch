diff -Naupr libvirt-0.9.6.orig//configure libvirt-0.9.6//configure
--- libvirt-0.9.6.orig//configure	2011-09-22 02:49:44.000000000 -0400
+++ libvirt-0.9.6//configure	2011-10-11 09:24:03.298060456 -0400
@@ -56136,12 +56136,12 @@ if test -n "$LIBNL_CFLAGS"; then
     pkg_cv_LIBNL_CFLAGS="$LIBNL_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libnl-1 >= \$LIBNL_REQUIRED\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libnl-1 >= $LIBNL_REQUIRED") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libnl-3.0 >= \$LIBNL_REQUIRED\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libnl-3.0 >= $LIBNL_REQUIRED") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBNL_CFLAGS=`$PKG_CONFIG --cflags "libnl-1 >= $LIBNL_REQUIRED" 2>/dev/null`
+  pkg_cv_LIBNL_CFLAGS=`$PKG_CONFIG --cflags "libnl-3.0 >= $LIBNL_REQUIRED" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -56152,12 +56152,12 @@ if test -n "$LIBNL_LIBS"; then
     pkg_cv_LIBNL_LIBS="$LIBNL_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libnl-1 >= \$LIBNL_REQUIRED\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libnl-1 >= $LIBNL_REQUIRED") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libnl-3.0 >= \$LIBNL_REQUIRED\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libnl-3.0 >= $LIBNL_REQUIRED") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBNL_LIBS=`$PKG_CONFIG --libs "libnl-1 >= $LIBNL_REQUIRED" 2>/dev/null`
+  pkg_cv_LIBNL_LIBS=`$PKG_CONFIG --libs "libnl-3.0 >= $LIBNL_REQUIRED" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -56177,9 +56177,9 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LIBNL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "libnl-1 >= $LIBNL_REQUIRED" 2>&1`
+	        LIBNL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "libnl-3.0 >= $LIBNL_REQUIRED" 2>&1`
         else
-	        LIBNL_PKG_ERRORS=`$PKG_CONFIG --print-errors "libnl-1 >= $LIBNL_REQUIRED" 2>&1`
+	        LIBNL_PKG_ERRORS=`$PKG_CONFIG --print-errors "libnl-3.0 >= $LIBNL_REQUIRED" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LIBNL_PKG_ERRORS" >&5
diff -Naupr libvirt-0.9.6.orig//configure.ac libvirt-0.9.6//configure.ac
--- libvirt-0.9.6.orig//configure.ac	2011-09-22 02:42:11.000000000 -0400
+++ libvirt-0.9.6//configure.ac	2011-10-11 09:23:18.350060430 -0400
@@ -2434,7 +2434,7 @@ LIBNL_LIBS=""
 have_libnl=no
 
 if test "$with_linux" = "yes"; then
-    PKG_CHECK_MODULES([LIBNL], [libnl-1 >= $LIBNL_REQUIRED], [
+    PKG_CHECK_MODULES([LIBNL], [libnl-3.0 >= $LIBNL_REQUIRED], [
         have_libnl=yes
         AC_DEFINE_UNQUOTED([HAVE_LIBNL], 1, [whether the netlink library is available])
     ], [
diff -Naupr libvirt-0.9.6.orig//src/util/netlink.c libvirt-0.9.6//src/util/netlink.c
--- libvirt-0.9.6.orig//src/util/netlink.c	2011-06-24 03:21:07.000000000 -0400
+++ libvirt-0.9.6//src/util/netlink.c	2011-10-11 09:48:00.702061153 -0400
@@ -74,15 +74,15 @@ int nlComm(struct nl_msg *nl_msg,
     int fd;
     int n;
     struct nlmsghdr *nlmsg = nlmsg_hdr(nl_msg);
-    struct nl_handle *nlhandle = nl_handle_alloc();
+    struct nl_sock *nlsock = nl_socket_alloc();
 
-    if (!nlhandle) {
+    if (!nlsock) {
         virReportSystemError(errno,
-                             "%s", _("cannot allocate nlhandle for netlink"));
+                             "%s", _("cannot allocate nlsock for netlink"));
         return -1;
     }
 
-    if (nl_connect(nlhandle, NETLINK_ROUTE) < 0) {
+    if (nl_connect(nlsock, NETLINK_ROUTE) < 0) {
         virReportSystemError(errno,
                              "%s", _("cannot connect to netlink socket"));
         rc = -1;
@@ -93,7 +93,7 @@ int nlComm(struct nl_msg *nl_msg,
 
     nlmsg->nlmsg_pid = getpid();
 
-    nbytes = nl_send_auto_complete(nlhandle, nl_msg);
+    nbytes = nl_send_auto_complete(nlsock, nl_msg);
     if (nbytes < 0) {
         virReportSystemError(errno,
                              "%s", _("cannot send to netlink socket"));
@@ -101,7 +101,7 @@ int nlComm(struct nl_msg *nl_msg,
         goto err_exit;
     }
 
-    fd = nl_socket_get_fd(nlhandle);
+    fd = nl_socket_get_fd(nlsock);
 
     FD_ZERO(&readfds);
     FD_SET(fd, &readfds);
@@ -118,7 +118,7 @@ int nlComm(struct nl_msg *nl_msg,
         goto err_exit;
     }
 
-    *respbuflen = nl_recv(nlhandle, &nladdr, respbuf, NULL);
+    *respbuflen = nl_recv(nlsock, &nladdr, respbuf, NULL);
     if (*respbuflen <= 0) {
         virReportSystemError(errno,
                              "%s", _("nl_recv failed"));
@@ -131,7 +131,7 @@ err_exit:
         *respbuflen = 0;
     }
 
-    nl_handle_destroy(nlhandle);
+    nl_socket_free(nlsock);
     return rc;
 }
 
