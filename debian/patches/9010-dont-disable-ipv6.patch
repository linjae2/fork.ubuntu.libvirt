Author: Jeremy Visser <jeremy.visser@gmail.com>
Description: Don't disable IPv6 on the bridge interface. The original intent of
 disabling IPv6 was to prevent RAs received from client VMs from accidentally
 adding addresses to the bridge interface. However, only accept_ra=0 is
 necessary to fix this, without the side-effect of disabling IPv6. This patch
 was rejected by upstream who stated this will be handled when IPv6 is supported
 in the domain XML.
Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=501934
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/528934
Forwarded: yes
Index: libvirt-0.8.5/src/network/bridge_driver.c
===================================================================
--- libvirt-0.8.5.orig/src/network/bridge_driver.c	2010-11-02 16:26:33.704307000 -0500
+++ libvirt-0.8.5/src/network/bridge_driver.c	2010-11-02 16:29:40.363576000 -0500
@@ -1028,29 +1028,11 @@
 
 #define SYSCTL_PATH "/proc/sys"
 
-static int networkDisableIPV6(virNetworkObjPtr network)
+static int networkSetupIPV6(virNetworkObjPtr network)
 {
     char *field = NULL;
     int ret = -1;
 
-    if (virAsprintf(&field, SYSCTL_PATH "/net/ipv6/conf/%s/disable_ipv6", network->def->bridge) < 0) {
-        virReportOOMError();
-        goto cleanup;
-    }
-
-    if (access(field, W_OK) < 0 && errno == ENOENT) {
-        VIR_DEBUG("ipv6 appears to already be disabled on %s", network->def->bridge);
-        ret = 0;
-        goto cleanup;
-    }
-
-    if (virFileWriteStr(field, "1") < 0) {
-        virReportSystemError(errno,
-                             _("cannot enable %s"), field);
-        goto cleanup;
-    }
-    VIR_FREE(field);
-
     if (virAsprintf(&field, SYSCTL_PATH "/net/ipv6/conf/%s/accept_ra", network->def->bridge) < 0) {
         virReportOOMError();
         goto cleanup;
@@ -1191,7 +1173,7 @@
         return -1;
     }
 
-    if (networkDisableIPV6(network) < 0)
+    if (networkSetupIPV6(network) < 0)
         goto err_delbr;
 
     if (brSetForwardDelay(driver->brctl, network->def->bridge, network->def->delay) < 0)
