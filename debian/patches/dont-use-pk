Index: libvirt-0.4.0/qemud/libvirtd.conf
===================================================================
--- libvirt-0.4.0.orig/qemud/libvirtd.conf	2007-12-20 17:30:12.767403876 +0100
+++ libvirt-0.4.0/qemud/libvirtd.conf	2007-12-21 11:06:58.928030600 +0100
@@ -70,14 +70,14 @@
 # without becoming root.
 #
 # This is restricted to 'root' by default.
-#unix_sock_group = "libvirt"
+unix_sock_group = "libvirtd"
 
 # Set the UNIX socket permissions for the R/O socket. This is used
 # for monitoring VM status only
 #
 # Default allows any user. If setting group ownership may want to
 # restrict this to:
-#unix_sock_ro_perms = "0777"
+unix_sock_ro_perms = "0777"
 
 # Set the UNIX socket permissions for the R/W socket. This is used
 # for full management of VMs
@@ -87,7 +87,7 @@
 #
 # If not using PolicyKit and setting group ownership for access
 # control then you may want to relax this to:
-#unix_sock_rw_perms = "0770"
+unix_sock_rw_perms = "0770"
 
 
 
@@ -117,7 +117,7 @@
 #
 # To restrict monitoring of domains you may wish to enable
 # an authentication mechanism here
-#auth_unix_ro = "none"
+auth_unix_ro = "none"
 
 # Set an authentication scheme for UNIX read-write sockets
 # By default socket permissions only allow root. If PolicyKit
@@ -126,7 +126,7 @@
 #
 # If the unix_sock_rw_perms are changed you may wish to enable
 # an authentication mechanism here
-#auth_unix_rw = "none"
+auth_unix_rw = "none"
 
 # Change the authentication scheme for TCP sockets.
 #
Index: libvirt-0.4.0/src/conf.c
===================================================================
--- libvirt-0.4.0.orig/src/conf.c	2007-12-21 11:08:16.941053913 +0100
+++ libvirt-0.4.0/src/conf.c	2007-12-21 11:08:36.457309922 +0100
@@ -705,7 +705,7 @@
 virConfPtr
 __virConfReadFile(const char *filename)
 {
-    char content[4096];
+    char content[16384];
     int fd;
     int len;
 
