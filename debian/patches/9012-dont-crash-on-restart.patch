Description: Fix a crash when restarting libvirtd.
 If you shutdown libvirtd while a domain with PCI devices is running, then try
 to restart libvirtd, libvirtd will crash.
 .
 This happens because qemuUpdateActivePciHostdevs() is calling
 pciDeviceListSteal() with a dev of 0x0 (NULL), and then trying to dereference
 it.  This patch fixes it up so that qemuUpdateActivePciHostdevs() steals the
 devices after first Get()'ting them, avoiding the crash.
Origin: http://libvirt.org/git/?p=libvirt.git;a=commit;h=7cc5410bfd78f67300fe0344658e66df6482aa25

diff -Nur libvirt-0.7.5/src/qemu/qemu_driver.c libvirt-0.7.5.new/src/qemu/qemu_driver.c
--- libvirt-0.7.5/src/qemu/qemu_driver.c	2010-01-28 08:35:14.467104576 -0600
+++ libvirt-0.7.5.new/src/qemu/qemu_driver.c	2010-01-28 08:35:43.735863804 -0600
@@ -1771,6 +1771,7 @@
                             virDomainDefPtr def)
 {
     pciDeviceList *pcidevs;
+    int i;
     int ret = -1;
 
     if (!def->nhostdevs)
@@ -1779,8 +1780,9 @@
     if (!(pcidevs = qemuGetPciHostDeviceList(NULL, def)))
         return -1;
 
-    while (pciDeviceListCount(pcidevs) > 0) {
-        pciDevice *dev = pciDeviceListSteal(NULL, pcidevs, 0);
+    for (i = 0; i < pciDeviceListCount(pcidevs); i++) {
+        pciDevice *dev = pciDeviceListGet(pcidevs, i);
+        pciDeviceListSteal(NULL, pcidevs, dev);
         if (pciDeviceListAdd(NULL,
                              driver->activePciHostdevs,
                              dev) < 0) {
