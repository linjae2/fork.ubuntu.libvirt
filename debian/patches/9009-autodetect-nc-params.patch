Description: autodetect if the remote nc command supports the -q option
Author: Marc Deslauriers <marc.deslauriers@ubuntu.com>
Origin: other, based on http://hg.fedorahosted.org/hg/virt-manager/rev/1f781890ea4a
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/517478
Bug: https://bugzilla.redhat.com/show_bug.cgi?id=562176

Index: libvirt-0.8.3/src/remote/remote_driver.c
===================================================================
--- libvirt-0.8.3.orig/src/remote/remote_driver.c	2010-08-11 16:32:56.000000000 -0500
+++ libvirt-0.8.3/src/remote/remote_driver.c	2010-08-11 17:12:01.000000000 -0500
@@ -730,7 +730,8 @@
     }
 
     case trans_ssh: {
-        int j, nr_args = 6;
+        int j, nr_args = 4;
+        virBuffer cmd_netcat = VIR_BUFFER_INITIALIZER;
 
         if (username) nr_args += 2; /* For -l username */
         if (no_tty) nr_args += 5;   /* For -T -o BatchMode=yes -e none */
@@ -763,12 +764,37 @@
             cmd_argv[j++] = strdup ("none");
         }
         cmd_argv[j++] = strdup (priv->hostname);
-        cmd_argv[j++] = strdup (netcat ? netcat : "nc");
-        cmd_argv[j++] = strdup ("-U");
-        cmd_argv[j++] = strdup (sockname ? sockname :
-                                (flags & VIR_CONNECT_RO
-                                 ? LIBVIRTD_PRIV_UNIX_SOCKET_RO
-                                 : LIBVIRTD_PRIV_UNIX_SOCKET));
+
+	/*
+	 * This ugly thing is a shell script to detect availability of
+	 * the -q option for 'nc': debian and suse based distros need this
+	 * flag to ensure the remote nc will exit on EOF, so it will go away
+	 * when we close the VNC tunnel. If it doesn't go away, subsequent
+	 * VNC connection attempts will hang.
+	 *
+	 * Fedora's 'nc' doesn't have this option, and apparently defaults
+	 * to the desired behavior.
+	 */
+
+        virBufferVSprintf(&cmd_netcat, "%s -q 2>&1 | grep -q 'requires an argument';"
+                                       "if [ $? -eq 0 ] ; then"
+                                       "   CMD='-q 0';"
+                                       "else"
+                                       "   CMD='';"
+                                       "fi;%s $CMD -U %s",
+                                       netcat ? netcat : "nc",
+                                       netcat ? netcat : "nc",
+                                       sockname ? sockname :
+                                        (flags & VIR_CONNECT_RO
+                                         ? LIBVIRTD_PRIV_UNIX_SOCKET_RO
+                                         : LIBVIRTD_PRIV_UNIX_SOCKET));
+
+        if (virBufferError(&cmd_netcat)) {
+            virBufferFreeAndReset(&cmd_netcat);
+            goto out_of_memory;
+        }
+
+        cmd_argv[j++] = virBufferContentAndReset(&cmd_netcat);
         cmd_argv[j++] = 0;
         assert (j == nr_args);
         for (j = 0; j < (nr_args-1); j++)
