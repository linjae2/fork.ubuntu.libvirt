commit 201eda603b1a245a13905acbeaa1231399fec641
Author: Daniel P. Berrange <berrange@redhat.com>
Date:   Wed Jan 22 15:26:21 2014 +0000

    Add a read/write lock implementation
    
    Add virRWLock backed up by a POSIX rwlock primitive
    
    Signed-off-by: Daniel P. Berrange <berrange@redhat.com>
    (cherry picked from commit c065984b58000a44c90588198d222a314ac532fd)

Index: libvirt-1.1.1/src/libvirt_private.syms
===================================================================
--- libvirt-1.1.1.orig/src/libvirt_private.syms	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/libvirt_private.syms	2014-03-25 14:15:26.450627537 -0500
@@ -1950,6 +1950,11 @@ virMutexInitRecursive;
 virMutexLock;
 virMutexUnlock;
 virOnce;
+virRWLockDestroy;
+virRWLockInit;
+virRWLockRead;
+virRWLockUnlock;
+virRWLockWrite;
 virThreadCancel;
 virThreadCreate;
 virThreadID;
Index: libvirt-1.1.1/src/util/virthread.h
===================================================================
--- libvirt-1.1.1.orig/src/util/virthread.h	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/util/virthread.h	2014-03-25 14:15:26.450627537 -0500
@@ -28,6 +28,9 @@
 typedef struct virMutex virMutex;
 typedef virMutex *virMutexPtr;
 
+typedef struct virRWLock virRWLock;
+typedef virRWLock *virRWLockPtr;
+
 typedef struct virCond virCond;
 typedef virCond *virCondPtr;
 
@@ -89,6 +92,13 @@ void virMutexLock(virMutexPtr m);
 void virMutexUnlock(virMutexPtr m);
 
 
+int virRWLockInit(virRWLockPtr m) ATTRIBUTE_RETURN_CHECK;
+void virRWLockDestroy(virRWLockPtr m);
+
+void virRWLockRead(virRWLockPtr m);
+void virRWLockWrite(virRWLockPtr m);
+void virRWLockUnlock(virRWLockPtr m);
+
 
 int virCondInit(virCondPtr c) ATTRIBUTE_RETURN_CHECK;
 int virCondDestroy(virCondPtr c);
Index: libvirt-1.1.1/src/util/virthreadpthread.c
===================================================================
--- libvirt-1.1.1.orig/src/util/virthreadpthread.c	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/util/virthreadpthread.c	2014-03-25 14:15:26.450627537 -0500
@@ -91,6 +91,39 @@ void virMutexUnlock(virMutexPtr m)
 }
 
 
+int virRWLockInit(virRWLockPtr m)
+{
+    int ret;
+    ret = pthread_rwlock_init(&m->lock, NULL);
+    if (ret != 0) {
+        errno = ret;
+        return -1;
+    }
+    return 0;
+}
+
+void virRWLockDestroy(virRWLockPtr m)
+{
+    pthread_rwlock_destroy(&m->lock);
+}
+
+
+void virRWLockRead(virRWLockPtr m)
+{
+    pthread_rwlock_rdlock(&m->lock);
+}
+
+void virRWLockWrite(virRWLockPtr m)
+{
+    pthread_rwlock_wrlock(&m->lock);
+}
+
+
+void virRWLockUnlock(virRWLockPtr m)
+{
+    pthread_rwlock_unlock(&m->lock);
+}
+
 int virCondInit(virCondPtr c)
 {
     int ret;
Index: libvirt-1.1.1/src/util/virthreadpthread.h
===================================================================
--- libvirt-1.1.1.orig/src/util/virthreadpthread.h	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/util/virthreadpthread.h	2014-03-25 14:15:26.450627537 -0500
@@ -27,6 +27,10 @@ struct virMutex {
     pthread_mutex_t lock;
 };
 
+struct virRWLock {
+    pthread_rwlock_t lock;
+};
+
 struct virCond {
     pthread_cond_t cond;
 };
Index: libvirt-1.1.1/src/util/virthreadwin32.c
===================================================================
--- libvirt-1.1.1.orig/src/util/virthreadwin32.c	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/util/virthreadwin32.c	2014-03-25 14:15:26.454627537 -0500
@@ -123,6 +123,25 @@ void virMutexUnlock(virMutexPtr m)
 }
 
 
+int virRWLockInit(virRWLockPtr m ATTRIBUTE_UNUSED)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+void virRWLockDestroy(virRWLockPtr m ATTRIBUTE_UNUSED)
+{}
+
+
+void virRWLockRead(virRWLockPtr m ATTRIBUTE_UNUSED)
+{}
+
+void virRWLockWrite(virRWLockPtr m ATTRIBUTE_UNUSED)
+{}
+
+
+void virRWLockUnlock(virRWLockPtr m ATTRIBUTE_UNUSED)
+{}
 
 int virCondInit(virCondPtr c)
 {
Index: libvirt-1.1.1/src/util/virthreadwin32.h
===================================================================
--- libvirt-1.1.1.orig/src/util/virthreadwin32.h	2014-03-25 14:15:26.458627537 -0500
+++ libvirt-1.1.1/src/util/virthreadwin32.h	2014-03-25 14:15:26.454627537 -0500
@@ -30,6 +30,10 @@ struct virMutex {
     HANDLE lock;
 };
 
+struct virRWLock {
+    bool ignored;
+};
+
 struct virCond {
     virMutex lock;
     size_t nwaiters;
