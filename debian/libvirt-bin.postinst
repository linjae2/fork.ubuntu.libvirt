#!/bin/sh
# postinst script for libvirt-bin
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    	if ! getent group libvirtd >/dev/null; then
    		addgroup --system libvirtd
	fi

	# Add each admin user to the libvirtd group
	for u in $(grep "^admin:" /etc/group | sed -e "s/^.*://" -e "s/,/ /g"); do
		adduser "$u" libvirtd >/dev/null || true
	done

	# user and group libvirt runs qemu/kvm instances with
	if ! getent group kvm >/dev/null; then
		addgroup --quiet --system kvm
	fi
	if ! getent passwd libvirt-qemu >/dev/null; then
		adduser --quiet \
			--system \
			--ingroup kvm \
			--quiet \
			--disabled-login \
			--disabled-password \
                        --home /var/lib/libvirt \
                        --no-create-home \
			-gecos "Libvirt Qemu" \
			libvirt-qemu
	fi

	# libvirt from 0.6.0 on is safe to restart with running vms:
	if [ -n "$2" ] &&  dpkg --compare-versions "$2" ge 0.6.0; then
	    if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                invoke-rc.d libvirt-bin stop
            else
                /etc/init.d/libvirt-bin stop
            fi
	    sleep 1
	fi

	if dpkg --compare-versions "$2" lt "0.6.1-2"; then
	    if [ -e /etc/rc2.d/S20libvirt-bin ] && \
	       [ -e /etc/rc3.d/S20libvirt-bin ] && \
	       [ -e /etc/rc4.d/S20libvirt-bin ] && \
	       [ -e /etc/rc5.d/S20libvirt-bin ] && \
	       [ -e /etc/rc0.d/K20libvirt-bin ] && \
	       [ -e /etc/rc1.d/K20libvirt-bin ] && \
	       [ -e /etc/rc6.d/K20libvirt-bin ]; then
		update-rc.d -f libvirt-bin remove >/dev/null
	    fi
	fi

	# 0.7.2 moved virt-aa-helper to /usr/lib/libvirt, so preserve
	# the user changes (if any). If the old profile was changed,
	# then update it for the new path, then move into place.
	old_profile="/etc/apparmor.d/usr.bin.virt-aa-helper"
	new_profile="/etc/apparmor.d/usr.lib.libvirt.virt-aa-helper"
	if dpkg --compare-versions "$2" le-nl "0.7.0-1ubuntu15" && [ -f "$old_profile" ]; then
	    sed -i "s#/usr/bin/virt-aa-helper#/usr/lib/libvirt/virt-aa-helper#g" "$old_profile"
	    old_md5sum="$(md5sum $old_profile | sed -e 's/ .*//')"
	    new_md5sum="$(md5sum $new_profile | sed -e 's/ .*//')"
	    if [ "$old_md5sum" = "$new_md5sum" ]; then
	        rm -f "$old_profile"
	    else
	        echo "Migrating user changes to $new_profile ..."
	        mv -f "$new_profile" "$new_profile".dpkg-new
	        mv -f "$old_profile" "$new_profile"
	    fi
	fi

	profile="/etc/apparmor.d/usr.sbin.libvirtd"
	if [ -f "$profile" ] && aa-status --enabled 2>/dev/null; then
	    apparmor_parser -r -W -T "$profile" || true
	fi
	profile="/etc/apparmor.d/usr.lib.libvirt.virt-aa-helper"
	if [ -f "$profile" ] && aa-status --enabled 2>/dev/null; then
	    apparmor_parser -r -W -T "$profile" || true
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# This must run after libvirt-bin has started
if [ "$1" = "configure" ]; then
    if dpkg --compare-versions "$2" lt-nl "0.7.5-5ubuntu27.5" ; then
        libvirt-migrate-qemu-disks -a || true
    fi
fi

exit 0


