#!/bin/sh

set -e

# summary of how this script can be called:
#
#   * <postinst> `configure' <most-recently-configured-version>
#   * <old-postinst> `abort-upgrade' <new-version>
#   * <conflictor's-postinst> `abort-remove' `in-favour' <package> <new-version>
#   * <postinst> `abort-remove'
#   * <deconfigured's-postinst> `abort-deconfigure' `in-favour' <failed-install-package>
#     <version> `removing' <conflicting-package> <version>
#
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

finish_conffile_transfer() {
    local conffile="$1"
    local firstver="$2"
    local lastver="$3"
    local pkgfrom="$4"
    local pkgto="$5"

    if [ "$6" != "--" ]; then
        echo "finish_conffile_transfer called with the wrong number of arguments" >&2
        return 1
    fi
    for _ in $(seq 1 6); do
        shift
    done

    # If we're upgrading from a new enough version of the package, we can assume
    # the transfer must have happened at some point in the past and stop here
    if [ -n "$2" ] && dpkg --compare-versions -- "$2" gt "$lastver"; then
        return 0
    fi

    if [ -e "$conffile.dpkg-transfer" ]; then
        # Complete the process started in $pkgfrom's preinst by restoring the
        # version of the conffile containing local modifications
        echo "Finishing transfer of config file $conffile (from $pkgfrom to $pkgto) ..."
        mv -f "$conffile.dpkg-transfer" "$conffile"
        return 0
    fi

    if [ -e "$conffile.dpkg-disappear" ]; then
        # The conffile had been deleted by the admin, so let's return to
        # that state
        rm -f "$conffile" "$conffile.dpkg-disappear"
        return 0
    fi
}

add_users_groups()
{
    if ! getent group libvirt >/dev/null; then
        addgroup --quiet --system libvirt
    fi
}

add_statoverrides()
{
    ROOT_DIRS="
        /var/lib/libvirt/images/
        /var/lib/libvirt/boot/
        /var/cache/libvirt/
    "

    for dir in ${ROOT_DIRS}; do
        if ! dpkg-statoverride --list "${dir}" >/dev/null 2>&1; then
            [ ! -e "${dir}" ] || chown root:root "${dir}"
            [ ! -e "${dir}" ] || chmod 0711 "${dir}"
        fi
    done
}

DAEMON_SYSTEM_TO_DAEMON_COMMON="
    /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
    /etc/default/libvirt-guests
    /etc/sasl2/libvirt.conf
"
DAEMON_SYSTEM_SYSV_TO_DAEMON_COMMON="
    /etc/init.d/libvirt-guests
"

case "$1" in
    configure)
        add_users_groups
        add_statoverrides

        # Obsolete UML stuff included until 9.0.0-1
        rm -f /var/log/libvirt/uml/.placeholder
        if [ -d /var/log/libvirt/uml ]; then
            rmdir --ignore-fail-on-non-empty /var/log/libvirt/uml
        fi

        for conf in $DAEMON_SYSTEM_TO_DAEMON_COMMON; do
            finish_conffile_transfer \
                "$conf" \
                "6.0.0-0~" \
                "10.6.0-2~" \
                "libvirt-daemon-system" \
                "libvirt-daemon-common" \
                -- \
                "$@"
        done
        for conf in $DAEMON_SYSTEM_SYSV_TO_DAEMON_COMMON; do
            finish_conffile_transfer \
                "$conf" \
                "6.0.0-0~" \
                "10.6.0-2~" \
                "libvirt-daemon-system-sysv" \
                "libvirt-daemon-common" \
                -- \
                "$@"
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
