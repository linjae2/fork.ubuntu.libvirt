<?xml version="1.0"?>
<api name='libvir-python'>
  <symbols>
    <function name="virConnectListDomainsID" file='python'>
      <info>Returns the list of the ID of the domains on the hypervisor</info>
      <arg name='conn' type='virConnectPtr' info='pointer to the hypervisor connection'/>
      <return type='int *' info="the list of ID or None in case of error"/>
    </function>
    <function name='virDomainLookupByUUID' file='python'>
      <info>Try to lookup a domain on the given hypervisor based on its UUID.</info>
      <return type='virDomainPtr' info='a new domain object or NULL in case of failure'/>
      <arg name='conn' type='virConnectPtr' info='pointer to the hypervisor connection'/>
      <arg name='uuid' type='const unsigned char *' info='the UUID string for the domain, must be 16 bytes'/>
    </function>
    <function name='virDomainGetInfo' file='python'>
      <info>Extract informations about a domain. Note that if the connection used to get the domain is limited only a partial set of the informations can be extracted.</info>
      <return type='int *' info='the list of informations or None in case of error'/>
      <arg name='domain' type='virDomainPtr' info='a domain object'/>
    </function>
    <function name='virNodeGetInfo' file='python'>
      <info>Extract hardware informations about the Node.</info>
      <return type='int *' info='the list of informations or None in case of error'/>
      <arg name='conn' type='virConnectPtr' info='pointer to the hypervisor connection'/>
    </function>
    <function name='virDomainGetUUID' file='python'>
      <info>Extract the UUID unique Identifier of a domain.</info>
      <return type='char *' info='the 16 bytes string or None in case of error'/>
      <arg name='domain' type='virDomainPtr' info='a domain object'/>
    </function>
  </symbols>
</api>
